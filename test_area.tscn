[gd_scene load_steps=18 format=4 uid="uid://c4eoq72ehxscj"]

[ext_resource type="Texture2D" uid="uid://cd12eydfhe43q" path="res://sprites/tilemap.png" id="1_p5xn4"]
[ext_resource type="Texture2D" uid="uid://dluke1tljdocb" path="res://sprites/hexagon.png" id="3_p76b2"]
[ext_resource type="Script" path="res://scripts/visualmap.gd" id="4_sg763"]
[ext_resource type="Texture2D" uid="uid://dtqovca3rbpnw" path="res://sprites/mousemagewip.png" id="5_xqirl"]

[sub_resource type="GDScript" id="GDScript_vhgnm"]
script/source = "extends Node2D
@onready var visual: Node2D = $Visualmap
@onready var map: TileMapLayer = $TileMapLayer
@onready var visual_map: TileMapLayer = $Visualmap/VisualSelection
@onready var hero_holder: Node2D = $HeroHolder
@onready var enemy_holder: Node2D = $EnemyHolder


var selected_tile
var rotated_characters = []


enum game_states{
	picking,
	rotating
}
var game_state = game_states.picking


func _ready() -> void:
	for hero in hero_holder.get_children():
		Global.characters.append(hero)
	for enemy in enemy_holder.get_children():
		Global.characters.append(enemy)

func _physics_process(delta: float) -> void:
	pass
	
func _input(event: InputEvent) -> void:
	
	match game_state:
		game_states.picking:
			if event is InputEventMouseButton:
				if event.button_index == MOUSE_BUTTON_LEFT and event.is_pressed():
					game_state = game_states.rotating
					$Visualmap.get_node(\"AnimationPlayer\").play(\"raise_up\")
					visual_map.show()
					var clicked_tile = map.local_to_map(get_global_mouse_position())
					selected_tile = clicked_tile
					visual_map.get_parent().position = map.map_to_local(Vector2(clicked_tile.x,clicked_tile.y))
					
					
					print(map.local_to_map(get_global_mouse_position()))
					#print(visual_map.local_to_map(get_global_mouse_position()))
					var surrounding_tile = Vector2i(clicked_tile)
					
					#for i in Global.characters:
						#print(get_character_on_tile(map.local_to_map(i.global_position)))
					rotated_characters = []
					visual.get_node(\"RotateHolder\").rotation = 0
					if clicked_tile.x % 2 == 0:
						#center,t,tr,br,b,bl,tl
						
						visual_map.clear()
						#center
						visual_map.set_cell(Vector2i.ZERO,1,Vector2i.ZERO,map.get_cell_alternative_tile(clicked_tile))
						rotated_characters.append(get_character_on_tile(clicked_tile))
						if get_character_on_tile(clicked_tile) != null:
							visual.get_node(\"RotateHolder\").get_child(0).texture = get_character_on_tile(clicked_tile).get_node_or_null(\"Sprite2D\").texture
							visual.get_node(\"RotateHolder\").get_child(0).rotation = get_character_on_tile(surrounding_tile).rotation
						else:
							visual.get_node(\"RotateHolder\").get_child(0).texture = null	
						#t
						surrounding_tile = (Vector2i(clicked_tile.x,clicked_tile.y-1))
						rotated_characters.append(get_character_on_tile(surrounding_tile))
						visual_map.set_cell(surrounding_tile - clicked_tile,1,Vector2i.ZERO,map.get_cell_alternative_tile(surrounding_tile))
						if get_character_on_tile(surrounding_tile) != null:
							visual.get_node(\"RotateHolder\").get_child(1).texture = get_character_on_tile(surrounding_tile).get_node(\"Sprite2D\").texture
							visual.get_node(\"RotateHolder\").get_child(1).rotation = get_character_on_tile(surrounding_tile).rotation
						else:
							visual.get_node(\"RotateHolder\").get_child(1).texture = null			
						#tr
						surrounding_tile=(Vector2i(clicked_tile.x+1,clicked_tile.y-1))
						rotated_characters.append(get_character_on_tile(surrounding_tile))
						visual_map.set_cell(surrounding_tile-clicked_tile,1,Vector2i.ZERO,map.get_cell_alternative_tile(surrounding_tile))
						if get_character_on_tile(surrounding_tile) != null:
							visual.get_node(\"RotateHolder\").get_child(2).texture = get_character_on_tile(surrounding_tile).get_node(\"Sprite2D\").texture
							visual.get_node(\"RotateHolder\").get_child(2).rotation = get_character_on_tile(surrounding_tile).rotation
						else:
							visual.get_node(\"RotateHolder\").get_child(2).texture = null				
						#br
						surrounding_tile=(Vector2i(clicked_tile.x+1,clicked_tile.y))
						rotated_characters.append(get_character_on_tile(surrounding_tile))
						visual_map.set_cell(surrounding_tile-clicked_tile,1,Vector2i.ZERO,map.get_cell_alternative_tile(surrounding_tile))	
						if get_character_on_tile(surrounding_tile) != null:	
							visual.get_node(\"RotateHolder\").get_child(3).texture = get_character_on_tile(surrounding_tile).get_node(\"Sprite2D\").texture
							visual.get_node(\"RotateHolder\").get_child(3).rotation = get_character_on_tile(surrounding_tile).rotation
						else:
							visual.get_node(\"RotateHolder\").get_child(3).texture = null			
						#b
						surrounding_tile=(Vector2i(clicked_tile.x,clicked_tile.y+1))
						rotated_characters.append(get_character_on_tile(surrounding_tile))
						visual_map.set_cell(surrounding_tile-clicked_tile,1,Vector2i.ZERO,map.get_cell_alternative_tile(surrounding_tile))
						if get_character_on_tile(surrounding_tile) != null:
							visual.get_node(\"RotateHolder\").get_child(4).texture = get_character_on_tile(surrounding_tile).get_node(\"Sprite2D\").texture
							visual.get_node(\"RotateHolder\").get_child(4).rotation = get_character_on_tile(surrounding_tile).rotation
						else:
							visual.get_node(\"RotateHolder\").get_child(4).texture = null				
						#bl
						surrounding_tile=(Vector2i(clicked_tile.x-1,clicked_tile.y))
						rotated_characters.append(get_character_on_tile(surrounding_tile))
						visual_map.set_cell(surrounding_tile-clicked_tile,1,Vector2i.ZERO,map.get_cell_alternative_tile(surrounding_tile))
						if get_character_on_tile(surrounding_tile) != null:
							visual.get_node(\"RotateHolder\").get_child(5).texture = get_character_on_tile(surrounding_tile).get_node(\"Sprite2D\").texture
							visual.get_node(\"RotateHolder\").get_child(5).rotation = get_character_on_tile(surrounding_tile).rotation
						else:
							visual.get_node(\"RotateHolder\").get_child(5).texture = null	
						#tl
						surrounding_tile=(Vector2i(clicked_tile.x-1,clicked_tile.y-1))
						rotated_characters.append(get_character_on_tile(surrounding_tile))
						visual_map.set_cell(surrounding_tile-clicked_tile,1,Vector2i.ZERO,map.get_cell_alternative_tile(surrounding_tile))
						if get_character_on_tile(surrounding_tile) != null:
							visual.get_node(\"RotateHolder\").get_child(6).texture = get_character_on_tile(surrounding_tile).get_node(\"Sprite2D\").texture
							visual.get_node(\"RotateHolder\").get_child(6).rotation = get_character_on_tile(surrounding_tile).rotation
						else:
							visual.get_node(\"RotateHolder\").get_child(6).texture = null

					else:
						visual_map.clear()
						#center
						rotated_characters.append(get_character_on_tile(clicked_tile))

						visual_map.set_cell(Vector2i.ZERO,1,Vector2i.ZERO,map.get_cell_alternative_tile(clicked_tile))		
						if get_character_on_tile(clicked_tile) != null:
							visual.get_node(\"RotateHolder\").get_child(0).texture = get_character_on_tile(clicked_tile).get_node_or_null(\"Sprite2D\").texture
							visual.get_node(\"RotateHolder\").get_child(0).rotation = get_character_on_tile(clicked_tile).rotation
						else:
							visual.get_node(\"RotateHolder\").get_child(0).texture = null	
						
						
						#t
						surrounding_tile = (Vector2i(clicked_tile.x,clicked_tile.y-1))
						visual_map.set_cell(surrounding_tile - clicked_tile,1,Vector2i.ZERO,map.get_cell_alternative_tile(surrounding_tile))	
						rotated_characters.append(get_character_on_tile(surrounding_tile))
						if get_character_on_tile(surrounding_tile) != null:
							visual.get_node(\"RotateHolder\").get_child(1).texture = get_character_on_tile(surrounding_tile).get_node_or_null(\"Sprite2D\").texture
							visual.get_node(\"RotateHolder\").get_child(1).rotation = get_character_on_tile(surrounding_tile).rotation
						else:
							visual.get_node(\"RotateHolder\").get_child(1).texture = null	
								
						#tr
						surrounding_tile=(Vector2i(clicked_tile.x+1,clicked_tile.y))
						visual_map.set_cell(Vector2i(surrounding_tile.x-clicked_tile.x,surrounding_tile.y-clicked_tile.y-1),1,Vector2i.ZERO,map.get_cell_alternative_tile(surrounding_tile))
						rotated_characters.append(get_character_on_tile(surrounding_tile))
						if get_character_on_tile(surrounding_tile) != null:
							visual.get_node(\"RotateHolder\").get_child(2).texture = get_character_on_tile(surrounding_tile).get_node_or_null(\"Sprite2D\").texture
							visual.get_node(\"RotateHolder\").get_child(2).rotation = get_character_on_tile(surrounding_tile).rotation
						else:
							visual.get_node(\"RotateHolder\").get_child(2).texture = null		
						#br
						surrounding_tile=(Vector2i(clicked_tile.x+1,clicked_tile.y+1))
						visual_map.set_cell(Vector2i(surrounding_tile.x-clicked_tile.x,surrounding_tile.y-clicked_tile.y-1),1,Vector2i.ZERO,map.get_cell_alternative_tile(surrounding_tile))
						rotated_characters.append(get_character_on_tile(surrounding_tile))
						if get_character_on_tile(surrounding_tile) != null:
							visual.get_node(\"RotateHolder\").get_child(3).texture = get_character_on_tile(surrounding_tile).get_node_or_null(\"Sprite2D\").texture
							visual.get_node(\"RotateHolder\").get_child(3).rotation = get_character_on_tile(surrounding_tile).rotation
						else:
							visual.get_node(\"RotateHolder\").get_child(3).texture = null
						#b
						surrounding_tile=(Vector2i(clicked_tile.x,clicked_tile.y+1))
						visual_map.set_cell(surrounding_tile-clicked_tile,1,Vector2i.ZERO,map.get_cell_alternative_tile(surrounding_tile))	
						
						rotated_characters.append(get_character_on_tile(surrounding_tile))
						if get_character_on_tile(surrounding_tile) != null:
							visual.get_node(\"RotateHolder\").get_child(4).texture = get_character_on_tile(surrounding_tile).get_node_or_null(\"Sprite2D\").texture
							visual.get_node(\"RotateHolder\").get_child(4).rotation = get_character_on_tile(surrounding_tile).rotation
						else:
							visual.get_node(\"RotateHolder\").get_child(4).texture = null
						#bl
						surrounding_tile=(Vector2i(clicked_tile.x-1,clicked_tile.y+1))
						visual_map.set_cell(Vector2i(surrounding_tile.x-clicked_tile.x,surrounding_tile.y-clicked_tile.y-1),1,Vector2i.ZERO,map.get_cell_alternative_tile(surrounding_tile))
						rotated_characters.append(get_character_on_tile(surrounding_tile))
						if get_character_on_tile(surrounding_tile) != null:
							visual.get_node(\"RotateHolder\").get_child(5).texture = get_character_on_tile(surrounding_tile).get_node_or_null(\"Sprite2D\").texture
							visual.get_node(\"RotateHolder\").get_child(5).rotation = get_character_on_tile(surrounding_tile).rotation
						else:
							visual.get_node(\"RotateHolder\").get_child(5).texture = null	
						#tl
						surrounding_tile=(Vector2i(clicked_tile.x-1,clicked_tile.y))
						visual_map.set_cell(Vector2i(surrounding_tile.x-clicked_tile.x,surrounding_tile.y-clicked_tile.y-1),1,Vector2i.ZERO,map.get_cell_alternative_tile(surrounding_tile))
						rotated_characters.append(get_character_on_tile(surrounding_tile))
						if get_character_on_tile(surrounding_tile) != null:
							visual.get_node(\"RotateHolder\").get_child(6).texture = get_character_on_tile(surrounding_tile).get_node_or_null(\"Sprite2D\").texture
							visual.get_node(\"RotateHolder\").get_child(6).rotation = get_character_on_tile(surrounding_tile).rotation
						else:
							visual.get_node(\"RotateHolder\").get_child(6).texture = null
					
					
			
		game_states.rotating:
			if event is InputEventMouseButton:
				if event.button_index == MOUSE_BUTTON_RIGHT and event.is_released():
					game_state = game_states.picking
					$Visualmap.get_node(\"AnimationPlayer\").play(\"lower_down\")
					#visual_map.hide()
		
		
func apply_rotation(new_tile_array):
	
	#print(selected_tile)
	#print(new_tile_array)
	
	for i in rotated_characters.size():
		if rotated_characters[i]!=null:
			rotated_characters[i].global_position = $Visualmap/RotateHolder.get_child(i).global_position
			rotated_characters[i].global_rotation = $Visualmap/RotateHolder.get_child(i).global_rotation
	if selected_tile.x % 2 == 0:
		#surrounding_tile = (Vector2i(selected_tile.x,selected_tile.y-1))
		map.set_cell(Vector2i(selected_tile.x,selected_tile.y-1),2,Vector2i.ZERO,new_tile_array[0])		
		#tr
		#surrounding_tile=(Vector2i(clicked_tile.x+1,clicked_tile.y-1))
		map.set_cell(Vector2i(selected_tile.x+1,selected_tile.y-1),2,Vector2i.ZERO,new_tile_array[1])	
		#br
		#surrounding_tile=(Vector2i(clicked_tile.x+1,clicked_tile.y))
		map.set_cell(Vector2i(selected_tile.x+1,selected_tile.y),2,Vector2i.ZERO,new_tile_array[2])	
		#b
		#surrounding_tile=(Vector2i(clicked_tile.x,clicked_tile.y+1))
		map.set_cell(Vector2i(selected_tile.x,selected_tile.y+1),2,Vector2i.ZERO,new_tile_array[3])		#bl
		#surrounding_tile=(Vector2i(clicked_tile.x-1,clicked_tile.y))
		map.set_cell(Vector2i(selected_tile.x-1,selected_tile.y),2,Vector2i.ZERO,new_tile_array[4])	
		#tl
		#surrounding_tile=(Vector2i(clicked_tile.x-1,clicked_tile.y-1))
		map.set_cell(Vector2i(selected_tile.x-1,selected_tile.y-1),2,Vector2i.ZERO,new_tile_array[5])	
	else:
		#t
		#surrounding_tile = (Vector2i(clicked_tile.x,clicked_tile.y-1))
		map.set_cell(Vector2i(selected_tile.x,selected_tile.y-1),2,Vector2i.ZERO,new_tile_array[0])	
		#tr
		#surrounding_tile=(Vector2i(clicked_tile.x+1,clicked_tile.y))
		map.set_cell(Vector2i(selected_tile.x+1,selected_tile.y),2,Vector2i.ZERO,new_tile_array[1])
		#br
		#surrounding_tile=(Vector2i(clicked_tile.x+1,clicked_tile.y+1))
		map.set_cell(Vector2i(selected_tile.x+1,selected_tile.y+1),2,Vector2i.ZERO,new_tile_array[2])	
		#b
		#surrounding_tile=(Vector2i(clicked_tile.x,clicked_tile.y+1))
		map.set_cell(Vector2i(selected_tile.x,selected_tile.y+1),2,Vector2i.ZERO,new_tile_array[3])
		#bl
		#surrounding_tile=(Vector2i(clicked_tile.x-1,clicked_tile.y+1))
		map.set_cell(Vector2i(selected_tile.x-1,selected_tile.y+1),2,Vector2i.ZERO,new_tile_array[4])	
		#tl
		#surrounding_tile=(Vector2i(clicked_tile.x-1,clicked_tile.y))
		map.set_cell(Vector2i(selected_tile.x-1,selected_tile.y),2,Vector2i.ZERO,new_tile_array[5])	
		
			
			


func get_character_on_tile(tile_coord):
	for character in Global.characters:
		if map.local_to_map(character.global_position) == tile_coord:
			#print(character)
			return character
	return null
			
"

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_4wao0"]
texture = ExtResource("1_p5xn4")
margins = Vector2i(0, 4)
texture_region_size = Vector2i(56, 48)
1:0/0 = 0
2:0/0 = 0
3:0/0 = 0
4:0/0 = 0
5:0/0 = 0
0:1/0 = 0
1:1/0 = 0
2:1/0 = 0
3:1/0 = 0
4:1/0 = 0
5:1/0 = 0
0:2/0 = 0
1:2/0 = 0
2:2/0 = 0
3:2/0 = 0
0:3/0 = 0
1:3/0 = 0
2:3/0 = 0
3:3/0 = 0
0:0/0 = 0

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_5wxjy"]
texture = ExtResource("3_p76b2")
texture_region_size = Vector2i(100, 100)
0:0/next_alternative_id = 7
0:0/0 = 0
0:0/1 = 1
0:0/1/modulate = Color(0.756787, 0.0396225, 0.596886, 1)
0:0/2 = 2
0:0/2/modulate = Color(0.2484, 0.2484, 0.2484, 1)
0:0/3 = 3
0:0/3/modulate = Color(1, 0, 0, 1)
0:0/4 = 4
0:0/4/modulate = Color(0, 1, 0, 1)
0:0/5 = 5
0:0/5/modulate = Color(1, 1, 0, 1)
0:0/6 = 6
0:0/6/modulate = Color(0, 1, 1, 1)
1:0/0 = 0
0:1/0 = 0
1:1/0 = 0

[sub_resource type="TileSet" id="TileSet_8g7c7"]
tile_shape = 3
tile_offset_axis = 1
tile_size = Vector2i(100, 100)
sources/1 = SubResource("TileSetAtlasSource_4wao0")
sources/2 = SubResource("TileSetAtlasSource_5wxjy")

[sub_resource type="RectangleShape2D" id="RectangleShape2D_pxet8"]
size = Vector2(20, 322)

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_blh00"]
texture = ExtResource("1_p5xn4")
margins = Vector2i(0, 4)
texture_region_size = Vector2i(56, 48)
0:0/next_alternative_id = 3
0:0/0 = 0
0:0/1 = 1
0:0/1/modulate = Color(0.47653, 0, 0.220696, 1)
0:0/2 = 2
1:0/0 = 0
2:0/0 = 0
3:0/0 = 0
0:1/0 = 0
1:1/0 = 0
2:1/0 = 0
3:1/0 = 0

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_3mddg"]
texture = ExtResource("3_p76b2")
texture_region_size = Vector2i(100, 100)
0:0/next_alternative_id = 7
0:0/0 = 0
0:0/1 = 1
0:0/1/modulate = Color(0.62498, 0.000288399, 0.624975, 1)
0:0/2 = 2
0:0/2/modulate = Color(0.205117, 0.205117, 0.205117, 1)
0:0/3 = 3
0:0/3/modulate = Color(1, 0, 0, 1)
0:0/4 = 4
0:0/4/modulate = Color(0, 1, 0, 1)
0:0/5 = 5
0:0/5/modulate = Color(1, 1, 0, 1)
0:0/6 = 6
0:0/6/modulate = Color(0, 1, 1, 1)
1:0/0 = 0
0:1/0 = 0
1:1/0 = 0

[sub_resource type="TileSet" id="TileSet_26sf0"]
tile_shape = 3
tile_offset_axis = 1
tile_size = Vector2i(100, 100)
sources/0 = SubResource("TileSetAtlasSource_blh00")
sources/1 = SubResource("TileSetAtlasSource_3mddg")

[sub_resource type="CircleShape2D" id="CircleShape2D_qhtdw"]
radius = 126.695

[sub_resource type="Animation" id="Animation_n0ool"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1.25, 1.25)]
}

[sub_resource type="Animation" id="Animation_ecefi"]
resource_name = "lower_down"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(1.25, 1.25), Vector2(1, 1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(1),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}

[sub_resource type="Animation" id="Animation_33hk5"]
resource_name = "raise_up"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1.25, 1.25)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_gpc2v"]
_data = {
"RESET": SubResource("Animation_n0ool"),
"lower_down": SubResource("Animation_ecefi"),
"raise_up": SubResource("Animation_33hk5")
}

[node name="TestArea" type="Node2D"]
script = SubResource("GDScript_vhgnm")

[node name="TileMapLayer" type="TileMapLayer" parent="."]
tile_map_data = PackedByteArray("AAAAAAAAAgAAAAAAAAABAAAAAgAAAAAAAwAAAAEAAgAAAAAABAD//wAAAgAAAAAAAAD/////AgAAAAAABgAAAP//AgAAAAAAAQABAAEAAgAAAAAAAQACAAAAAgAAAAAABgACAP//AgAAAAAAAAADAP//AgAAAAAAAQAEAAAAAgAAAAAAAAAEAAEAAgAAAAAAAAADAAEAAgAAAAAABAADAAAAAgAAAAAAAAACAAIAAgAAAAAAAgADAAIAAgAAAAAAAQAEAAIAAgAAAAAAAAAFAAEAAgAAAAAAAAAGAAEAAgAAAAAAAAAHAAAAAgAAAAAAAAAGAAAAAgAAAAAAAAAHAP//AgAAAAAAAAAGAP//AgAAAAAAAAAFAP//AgAAAAAAAgAFAAIAAgAAAAAAAAAGAAIAAgAAAAAAAAAHAAEAAgAAAAAAAAAIAAEAAgAAAAAAAAAIAAAAAgAAAAAAAAAIAP//AgAAAAAAAAAHAP7/AgAAAAAAAAAFAAAAAgAAAAAAAAAGAP7/AgAAAAAAAAAFAP3/AgAAAAAAAAAEAP7/AgAAAAAAAAADAP7/AgAAAAAAAAAFAP7/AgAAAAAAAAAEAP//AgAAAAAAAQACAP7/AgAAAAAAAAABAP7/AgAAAAAAAAACAAEAAgAAAAAABQD+/wIAAgAAAAAAAAD//wIAAgAAAAAAAAD//wEAAgAAAAAAAAAAAAIAAgAAAAAAAgABAAIAAgAAAAAAAQABAAMAAgAAAAAAAAAAAAMAAgAAAAAAAAACAAMAAgAAAAAAAQADAAMAAgAAAAAAAAAEAAMAAgAAAAAAAAACAAQAAgAAAAAAAAAHAP3/AgAAAAAAAAAJAP//AgAAAAAAAAABAP//AgAAAAAAAgD//wMAAgAAAAAAAAD+/wQAAgAAAAAAAAD9/wMAAgAAAAAAAAD8/wMAAgAAAAAAAAD7/wMAAgAAAAAAAAD6/wMAAgAAAAAAAAD2//z/AgAAAAAAAAD2//3/AgAAAAAAAAD2//7/AgAAAAAAAAD2////AgAAAAAAAAD2/wAAAgAAAAAAAAD2/wEAAgAAAAAAAAD2/wIAAgAAAAAAAAD2/wMAAgAAAAAAAAD3//z/AgAAAAAAAAD3//3/AgAAAAAAAAD3//7/AgAAAAAAAAD3////AgAAAAAAAAD3/wAAAgAAAAAAAAD3/wEAAgAAAAAAAAD3/wIAAgAAAAAAAAD3/wMAAgAAAAAAAAD4//z/AgAAAAAAAAD4//3/AgAAAAAAAAD4//7/AgAAAAAAAAD4////AgAAAAAAAAD4/wAAAgAAAAAAAAD4/wEAAgAAAAAAAAD4/wIAAgAAAAAAAAD4/wMAAgAAAAAAAAD5//z/AgAAAAAAAAD5//3/AgAAAAAAAAD5//7/AgAAAAAAAAD5////AgAAAAAAAAD5/wAAAgAAAAAAAAD5/wEAAgAAAAAAAAD5/wIAAgAAAAAAAAD5/wMAAgAAAAAAAAD6//z/AgAAAAAAAAD6//3/AgAAAAAAAAD6//7/AgAAAAAAAAD6////AgAAAAAAAAD6/wAAAgAAAAAAAAD6/wEAAgAAAAAAAAD6/wIAAgAAAAAAAAD7//z/AgAAAAAAAAD7//3/AgAAAAAAAAD7//7/AgAAAAAAAAD7////AgAAAAAAAAD7/wAAAgAAAAAAAAD7/wEAAgAAAAAAAAD7/wIAAgAAAAAAAAD8//z/AgAAAAAAAAD8//3/AgAAAAAAAAD8//7/AgAAAAAAAAD8////AgAAAAAAAAD8/wAAAgAAAAAAAAD8/wEAAgAAAAAAAAD8/wIAAgAAAAAAAAD9//z/AgAAAAAAAAD9//3/AgAAAAAAAAD9//7/AgAAAAAAAAD9////AgAAAAAAAAD9/wAAAgAAAAAAAAD9/wEAAgAAAAAAAAD9/wIAAgAAAAAAAAD+//z/AgAAAAAAAAD+//3/AgAAAAAAAAD+//7/AgAAAAAAAAD+////AgAAAAAAAAD+/wAAAgAAAAAAAAD+/wEAAgAAAAAAAAD+/wMAAgAAAAAAAAD1//v/AgAAAAAAAAD1//z/AgAAAAAAAAD1//3/AgAAAAAAAAD1//7/AgAAAAAAAAD2//v/AgAAAAAAAAD3//v/AgAAAAAAAAD4//v/AgAAAAAAAAD5//v/AgAAAAAAAAD6//v/AgAAAAAAAAD7//v/AgAAAAAAAAD8//v/AgAAAAAAAAD9//v/AgAAAAAAAAD+//v/AgAAAAAAAAD///v/AgAAAAAAAAD///z/AgAAAAAAAAD///3/AgAAAAAAAAD///7/AgAAAAAAAAAAAPv/AgAAAAAAAAAAAPz/AgAAAAAAAAAAAP3/AgAAAAAAAAAAAP7/AgAAAAAAAAABAPv/AgAAAAAAAAABAPz/AgAAAAAAAAABAP3/AgAAAAAAAAACAPv/AgAAAAAAAAACAPz/AgAAAAAAAAACAP3/AgAAAAAAAAADAPv/AgAAAAAAAAADAPz/AgAAAAAAAAADAP3/AgAAAAAAAAAEAPv/AgAAAAAAAAAEAPz/AgAAAAAAAAAEAP3/AgAAAAAAAAAFAPv/AgAAAAAAAAAFAPz/AgAAAAAAAAAGAPv/AgAAAAAAAAAGAPz/AgAAAAAAAAAGAP3/AgAAAAAAAAAHAPv/AgAAAAAAAAAHAPz/AgAAAAAAAAAIAPv/AgAAAAAAAAAIAPz/AgAAAAAAAAAIAP3/AgAAAAAAAAAIAP7/AgAAAAAAAAAJAPv/AgAAAAAAAAAJAPz/AgAAAAAAAAAJAP3/AgAAAAAAAAAJAP7/AgAAAAAAAAAEAAQAAgAAAAAAAAAFAAMAAgAAAAAAAAAFAAQAAgAAAAAAAAAGAAMAAgAAAAAAAAAGAAQAAgAAAAAAAAAHAAIAAgAAAAAAAAAHAAMAAgAAAAAAAAAHAAQAAgAAAAAAAAAIAAIAAgAAAAAAAAAIAAMAAgAAAAAAAAAIAAQAAgAAAAAAAAAJAAAAAgAAAAAAAAAJAAEAAgAAAAAAAAAJAAIAAgAAAAAAAAAJAAMAAgAAAAAAAAAJAAQAAgAAAAAAAAD1////AgAAAAAAAAD1/wAAAgAAAAAAAAD1/wEAAgAAAAAAAAD1/wIAAgAAAAAAAAD1/wMAAgAAAAAAAAD1/wQAAgAAAAAAAAD2/wQAAgAAAAAAAAD3/wQAAgAAAAAAAAD4/wQAAgAAAAAAAAD5/wQAAgAAAAAAAAD6/wQAAgAAAAAAAAD7/wQAAgAAAAAAAAD8/wQAAgAAAAAAAAD9/wQAAgAAAAAAAAD//wQAAgAAAAAAAAAAAAQAAgAAAAAAAAABAAQAAgAAAAAAAAADAAQAAgAAAAAAAAA=")
tile_set = SubResource("TileSet_8g7c7")

[node name="Camera2D" type="Camera2D" parent="."]
zoom = Vector2(0.75, 0.75)

[node name="HeroHolder" type="Node2D" parent="."]

[node name="Hero" type="Node2D" parent="HeroHolder"]
position = Vector2(-25, 0)

[node name="Sprite2D" type="Sprite2D" parent="HeroHolder/Hero"]
texture = ExtResource("5_xqirl")

[node name="Area2D" type="Area2D" parent="HeroHolder/Hero"]

[node name="CollisionShape2D" type="CollisionShape2D" parent="HeroHolder/Hero/Area2D"]
position = Vector2(0, 151)
shape = SubResource("RectangleShape2D_pxet8")

[node name="EnemyHolder" type="Node2D" parent="."]

[node name="Visualmap" type="Node2D" parent="."]
visible = false
position = Vector2(-185.415, 0)
scale = Vector2(1.25, 1.25)
script = ExtResource("4_sg763")

[node name="VisualSelection" type="TileMapLayer" parent="Visualmap"]
position = Vector2(-50, -50)
tile_map_data = PackedByteArray("AAAAAAAAAQAAAAAAAQD/////AQAAAAAAAQD//wAAAQAAAAAAAQAAAP//AQAAAAAAAQABAP//AQAAAAAAAQABAAAAAQAAAAAAAQAAAAEAAQAAAAAAAQA=")
tile_set = SubResource("TileSet_26sf0")

[node name="StaticBody2D" type="StaticBody2D" parent="Visualmap"]
visible = false
input_pickable = true

[node name="CollisionShape2D" type="CollisionShape2D" parent="Visualmap/StaticBody2D"]
position = Vector2(-0.390005, 0)
shape = SubResource("CircleShape2D_qhtdw")

[node name="AnimationPlayer" type="AnimationPlayer" parent="Visualmap"]
libraries = {
"": SubResource("AnimationLibrary_gpc2v")
}

[node name="RotateHolder" type="Node2D" parent="Visualmap"]

[node name="Center" type="Sprite2D" parent="Visualmap/RotateHolder"]
position = Vector2(10.415, 0)
texture = ExtResource("5_xqirl")

[node name="Top" type="Sprite2D" parent="Visualmap/RotateHolder"]
position = Vector2(10.415, -100)
texture = ExtResource("5_xqirl")

[node name="TopRight" type="Sprite2D" parent="Visualmap/RotateHolder"]
position = Vector2(85.415, -50)
texture = ExtResource("5_xqirl")

[node name="BottomRight" type="Sprite2D" parent="Visualmap/RotateHolder"]
position = Vector2(85.415, 50)
texture = ExtResource("5_xqirl")

[node name="Bottom" type="Sprite2D" parent="Visualmap/RotateHolder"]
position = Vector2(10.415, 100)
texture = ExtResource("5_xqirl")

[node name="BottomLeft" type="Sprite2D" parent="Visualmap/RotateHolder"]
position = Vector2(-64.585, 50)
texture = ExtResource("5_xqirl")

[node name="TopLeft" type="Sprite2D" parent="Visualmap/RotateHolder"]
position = Vector2(-64.585, -50)
texture = ExtResource("5_xqirl")

[connection signal="input_event" from="Visualmap/StaticBody2D" to="." method="_on_static_body_2d_input_event"]
[connection signal="input_event" from="Visualmap/StaticBody2D" to="Visualmap" method="_on_static_body_2d_input_event"]
